version: '3.8'

services:

  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: authentic:dev
    restart: always
    env_file: ./.env
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./staticfiles:/app/staticfiles:z
      - ./mediafiles:/app/mediafiles:z
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - redis
      - postgres

  # nginx:
  #   image: nginx:1.15-alpine
  #   restart: always
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx:/etc/nginx/conf.d
  #     - ./staticfiles:/usr/share/nginx/staticfiles:ro
  #     - ./mediafiles:/usr/share/nginx/mediafiles:ro
  #   depends_on:
  #     - web

  postgres:
    image: postgis/postgis:13-3.1
    # restart: always
    env_file: ./.env
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    ports:
      - "5432:5432"
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data

  redis:
    image: redis:6.2.6-alpine
    # restart: always
    env_file: ./.env
    ports:
      - "6379:6379"
    volumes:
      - ./redis/data:/var/lib/redis
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server --requirepass $REDIS_PASSWORD

  # mailhog:
  #   image: mailhog/mailhog
  #   # restart: always
  #   env_file: ./.env
  #   ports:
  #     - 1025:1025 # smtp server
  #     - 8025:8025 # web ui

  minio:
    image: minio/minio
    command: server --console-address ":9001" /data
    ports:
      - "9000:9000"
      - "9001:9001"
    hostname: minio
    env_file: ./.env
    volumes:
      - ./minio/data:/data:z
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:9000/minio/health/live"
        ]
      interval: 30s
      timeout: 20s
      retries: 3
  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
  #   # restart: always
  #   environment:
  #     - xpack.security.enabled=false
  #     - "discovery.type=single-node"
  #   ports:
  #     - 9200:9200

  # logstash:
  #   image: docker.elastic.co/logstash/logstash:8.4.3
  #   # restart: always
  #   environment:
  #     LS_JAVA_OPTS: "-Xmx256m -Xms256m"
  #   networks:
  #     - elk
  #   depends_on:
  #     - elasticsearch

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.11.0
  #   # restart: always
  #   environment:
  #     ELASTICSEARCH_HOSTS: $ELASTICSEARCH_HOSTS
  #   ports:
  #     - 5601:5601
  #   depends_on:
  #     - elasticsearch
